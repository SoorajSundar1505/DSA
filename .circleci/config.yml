# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1
jobs:
  build:
    docker:
      - image: cimg/node:16.13.1-browsers
    steps:
      - checkout
      - run: mkdir test-reports
      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
      - run:
          name: Kick off selenium pipeline
          command: |
            curl --location --request POST 'https://circleci.com/api/v2/project/github/SoorajSundar1505/Selenium-Java/pipeline' \
            --header 'Content-Type: application/json' \
            -u "CCIPAT_wpmXdXaJUkGKzDEeM3L3d_83b449287c57a635a9ab00ebaa23bd8ab9bd98f7"
            

      # Use mvn clean and package as the standard maven build phase
#      - run:
#          name: Build
#          command: mvn -B -DskipTests clean package
#      # Then run your tests!
#      - run:
#          name: Test
#          command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
#workflows:
#  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#    # Inside the workflow, you define the jobs you want to run.
#    jobs:
#      - build-and-test

#      - run:
#        name: Kick off selenium pipeline
#        command: |
#          curl --location --request POST 'https://circleci.com/api/v2/project/github/SoorajSundar1505/Selenium-Java/pipeline' \
#          --header 'Content-Type: application/json' \
#          -u "CCIPAT_wpmXdXaJUkGKzDEeM3L3d_83b449287c57a635a9ab00ebaa23bd8ab9bd98f7"

#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "build.gradle" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: gradle dependencies
#
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
#      - run: gradle test

