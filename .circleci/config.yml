# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - run:
          name: Kick off selenium pipeline
          command: |
            curl --location --request POST 'https://circleci.com/api/v2/project/github/SoorajSundar1505/Selenium-Java/pipeline' \
            --header 'Content-Type: application/json' \
            -u "CCIPAT_wpmXdXaJUkGKzDEeM3L3d_83b449287c57a635a9ab00ebaa23bd8ab9bd98f7"

      # Use mvn clean and package as the standard maven build phase
#      - run:
#          name: Build
#          command: mvn -B -DskipTests clean package
#      # Then run your tests!
#      - run:
#          name: Test
#          command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
#workflows:
#  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
#    # Inside the workflow, you define the jobs you want to run.
#    jobs:
#      - build-and-test

#      - run:
#        name: Kick off selenium pipeline
#        command: |
#          curl --location --request POST 'https://circleci.com/api/v2/project/github/SoorajSundar1505/Selenium-Java/pipeline' \
#          --header 'Content-Type: application/json' \
#          -u "CCIPAT_wpmXdXaJUkGKzDEeM3L3d_83b449287c57a635a9ab00ebaa23bd8ab9bd98f7"

#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "build.gradle" }}
#            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-
#
#      - run: gradle dependencies
#
#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
#      - run: gradle test

